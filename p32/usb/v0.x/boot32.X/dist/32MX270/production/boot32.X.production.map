
Allocating common symbols
Common symbol       size              file

pDst                0x4               build/32MX270/production/_ext/1472/usb.o
USBDeferINDataStagePackets
                    0x4               build/32MX270/production/_ext/1472/usb.o
BDT                 0x40              build/32MX270/production/_ext/1472/usb.o
CtrlTrfData         0x40              build/32MX270/production/_ext/1472/usb.o
USBDeferOUTDataStagePackets
                    0x4               build/32MX270/production/_ext/1472/usb.o
USBDeviceState      0x4               build/32MX270/production/_ext/1472/main.o
controlTransferState
                    0x1               build/32MX270/production/_ext/1472/usb.o
endpoint_number     0x1               build/32MX270/production/_ext/1472/usb.o
pBDTEntryIn         0x8               build/32MX270/production/_ext/1472/usb.o
ep_data_out         0x8               build/32MX270/production/_ext/1472/usb.o
USBStatusStageEnabledFlag1
                    0x4               build/32MX270/production/_ext/1472/usb.o
outPipe             0xb               build/32MX270/production/_ext/1472/usb.o
USBStatusStageEnabledFlag2
                    0x4               build/32MX270/production/_ext/1472/usb.o
pBDTEntryOut        0x8               build/32MX270/production/_ext/1472/usb.o
BothEP0OutUOWNsSet  0x4               build/32MX270/production/_ext/1472/usb.o
pBDTEntryEP0OutNext
                    0x4               build/32MX270/production/_ext/1472/usb.o
USBBusIsSuspended   0x4               build/32MX270/production/_ext/1472/usb.o
USBStatusStageTimeoutCounter
                    0x1               build/32MX270/production/_ext/1472/usb.o
SetupPkt            0x8               build/32MX270/production/_ext/1472/usb.o
ep_data_in          0x8               build/32MX270/production/_ext/1472/usb.o
active_protocol     0x1               build/32MX270/production/_ext/1472/usb.o
shortPacketStatus   0x1               build/32MX270/production/_ext/1472/usb.o
pBDTEntryEP0OutCurrent
                    0x4               build/32MX270/production/_ext/1472/usb.o
USBActiveConfiguration
                    0x1               build/32MX270/production/_ext/1472/usb.o
RemoteWakeup        0x4               build/32MX270/production/_ext/1472/usb.o
inPipe              0x10              build/32MX270/production/_ext/1472/usb.o
USTATcopy           0x4               build/32MX270/production/_ext/1472/usb.o
USBAlternateInterface
                    0x1               build/32MX270/production/_ext/1472/usb.o
USBDeferStatusStagePacket
                    0x4               build/32MX270/production/_ext/1472/usb.o
idle_rate           0x1               build/32MX270/production/_ext/1472/usb.o

Microchip PIC32 Memory-Usage Report

kseg0 Program-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.text                   0x9d001000         0x21cc        8652  App's exec code 
.rodata                 0x9d0031cc          0x170         368  Read-only const 
.dinit                  0x9d003434           0x20          32   
      Total kseg0_program_mem used  :      0x235c        9052  88.4% of 0x2800

kseg0 Boot-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.startup                0x9fc00010          0x1a0         416  C startup code 
         Total kseg0_boot_mem used  :       0x1a0         416  81.2% of 0x200

Exception-Memory Usage 
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
          Total exception_mem used  :           0           0  <1% of 0x1000

kseg1 Boot-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.reset                  0xbfc00000           0x10          16  Reset handler 
         Total kseg1_boot_mem used  :        0x10          16  100.0% of 0x10
        --------------------------------------------------------------------------
         Total Program Memory used  :      0x250c        9484  63.8% of 0x3a10
        --------------------------------------------------------------------------


kseg1 Data-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.bss                    0xa0000508           0xf8         248  Uninitialized data 
.sbss                   0xa0000000          0x505        1285  Small uninit data 
.stack                  0xa0000600          0x408        1032  Min reserved for stack 
         Total kseg1_data_mem used  :       0xa05        2565  3.9% of 0x10000
        --------------------------------------------------------------------------
            Total Data Memory used  :       0xa05        2565  3.9% of 0x10000
        --------------------------------------------------------------------------


Dynamic Data-Memory Reservation
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
heap                             0              0           0  Reserved for heap 
stack                   0xa0010000     0x5fff0000  1610547200  Reserved for stack 

        --------------------------------------------------------------------------

Discarded input sections

 .reginfo       0x00000000       0x18 build/32MX270/production/_ext/1472/main.o
 .reginfo       0x00000000       0x18 build/32MX270/production/_ext/1472/serial.o
 .reginfo       0x00000000       0x18 build/32MX270/production/_ext/1472/flash.o
 .reginfo       0x00000000       0x18 build/32MX270/production/_ext/1472/delay.o
 .reginfo       0x00000000       0x18 build/32MX270/production/_ext/1472/core.o
 .reginfo       0x00000000       0x18 build/32MX270/production/_ext/1472/usb.o
 .reginfo       0x00000000       0x18 /opt/microchip/xc32/v1.33/bin/bin/../../lib/gcc/pic32mx/4.5.2/../../../../pic32mx/lib/./proc/32MX270F256B/processor.o

Memory Configuration

Name             Origin             Length             Attributes
exception_mem    0x9d000000         0x00001000
kseg0_program_mem 0x9d001000         0x00002800         xr
kseg1_boot_mem   0xbfc00000         0x00000010
kseg0_boot_mem   0x9fc00010         0x00000200
config3          0xbfc00bf0         0x00000004
config2          0xbfc00bf4         0x00000004
config1          0xbfc00bf8         0x00000004
config0          0xbfc00bfc         0x00000004
configsfrs       0xbfc00bf0         0x00000010
sfrs             0xbf800000         0x00100000
kseg1_data_mem   0xa0000000         0x00010000         w !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD build/32MX270/production/_ext/1360930308/crt0.o
LOAD build/32MX270/production/_ext/1472/main.o
LOAD build/32MX270/production/_ext/1472/serial.o
LOAD build/32MX270/production/_ext/1472/flash.o
LOAD build/32MX270/production/_ext/1472/delay.o
LOAD build/32MX270/production/_ext/1472/core.o
LOAD build/32MX270/production/_ext/1472/usb.o
                0x00000001                __MPLAB_BUILD = 0x1
LOAD /opt/microchip/xc32/v1.33/bin/bin/../../lib/gcc/pic32mx/4.5.2/../../../../pic32mx/lib/./proc/32MX270F256B/processor.o
                0x00000400                PROVIDE (_min_stack_size, 0x400)
                0x00000000                PROVIDE (_min_heap_size, 0x0)
                0x00000001                PROVIDE (_vector_spacing, 0x1)
                0x9d000000                _ebase_address = 0x9d000000
                0xbfc00000                _RESET_ADDR = 0xbfc00000
                0x9d000180                _GEN_EXCPT_ADDR = (_ebase_address + 0x180)

.reset          0xbfc00000       0x10
 *(.reset)
 .reset         0xbfc00000       0x10 build/32MX270/production/_ext/1360930308/crt0.o
                0xbfc00000                _reset

.startup        0x9fc00010      0x1a0
 *(.startup)
 .startup       0x9fc00010      0x1a0 build/32MX270/production/_ext/1360930308/crt0.o

.config_BFC00BF0
                0xbfc00bf0        0x4
 *(.config_BFC00BF0)
 .config_BFC00BF0
                0xbfc00bf0        0x4 build/32MX270/production/_ext/1472/main.o

.config_BFC00BF4
                0xbfc00bf4        0x4
 *(.config_BFC00BF4)
 .config_BFC00BF4
                0xbfc00bf4        0x4 build/32MX270/production/_ext/1472/main.o

.config_BFC00BF8
                0xbfc00bf8        0x4
 *(.config_BFC00BF8)
 .config_BFC00BF8
                0xbfc00bf8        0x4 build/32MX270/production/_ext/1472/main.o

.config_BFC00BFC
                0xbfc00bfc        0x4
 *(.config_BFC00BFC)
 .config_BFC00BFC
                0xbfc00bfc        0x4 build/32MX270/production/_ext/1472/main.o

.vector_0       0x9d000200        0x0
 *(.vector_0)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_0) <= (_vector_spacing << 0x5))), function at exception vector 0 too large)

.vector_1       0x9d000220        0x0
 *(.vector_1)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_1) <= (_vector_spacing << 0x5))), function at exception vector 1 too large)

.vector_2       0x9d000240        0x0
 *(.vector_2)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_2) <= (_vector_spacing << 0x5))), function at exception vector 2 too large)

.vector_3       0x9d000260        0x0
 *(.vector_3)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_3) <= (_vector_spacing << 0x5))), function at exception vector 3 too large)

.vector_4       0x9d000280        0x0
 *(.vector_4)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_4) <= (_vector_spacing << 0x5))), function at exception vector 4 too large)

.vector_5       0x9d0002a0        0x0
 *(.vector_5)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_5) <= (_vector_spacing << 0x5))), function at exception vector 5 too large)

.vector_6       0x9d0002c0        0x0
 *(.vector_6)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_6) <= (_vector_spacing << 0x5))), function at exception vector 6 too large)

.vector_7       0x9d0002e0        0x0
 *(.vector_7)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_7) <= (_vector_spacing << 0x5))), function at exception vector 7 too large)

.vector_8       0x9d000300        0x0
 *(.vector_8)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_8) <= (_vector_spacing << 0x5))), function at exception vector 8 too large)

.vector_9       0x9d000320        0x0
 *(.vector_9)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_9) <= (_vector_spacing << 0x5))), function at exception vector 9 too large)

.vector_10      0x9d000340        0x0
 *(.vector_10)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_10) <= (_vector_spacing << 0x5))), function at exception vector 10 too large)

.vector_11      0x9d000360        0x0
 *(.vector_11)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_11) <= (_vector_spacing << 0x5))), function at exception vector 11 too large)

.vector_12      0x9d000380        0x0
 *(.vector_12)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_12) <= (_vector_spacing << 0x5))), function at exception vector 12 too large)

.vector_13      0x9d0003a0        0x0
 *(.vector_13)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_13) <= (_vector_spacing << 0x5))), function at exception vector 13 too large)

.vector_14      0x9d0003c0        0x0
 *(.vector_14)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_14) <= (_vector_spacing << 0x5))), function at exception vector 14 too large)

.vector_15      0x9d0003e0        0x0
 *(.vector_15)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_15) <= (_vector_spacing << 0x5))), function at exception vector 15 too large)

.vector_16      0x9d000400        0x0
 *(.vector_16)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_16) <= (_vector_spacing << 0x5))), function at exception vector 16 too large)

.vector_17      0x9d000420        0x0
 *(.vector_17)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_17) <= (_vector_spacing << 0x5))), function at exception vector 17 too large)

.vector_18      0x9d000440        0x0
 *(.vector_18)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_18) <= (_vector_spacing << 0x5))), function at exception vector 18 too large)

.vector_19      0x9d000460        0x0
 *(.vector_19)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_19) <= (_vector_spacing << 0x5))), function at exception vector 19 too large)

.vector_20      0x9d000480        0x0
 *(.vector_20)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_20) <= (_vector_spacing << 0x5))), function at exception vector 20 too large)

.vector_21      0x9d0004a0        0x0
 *(.vector_21)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_21) <= (_vector_spacing << 0x5))), function at exception vector 21 too large)

.vector_22      0x9d0004c0        0x0
 *(.vector_22)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_22) <= (_vector_spacing << 0x5))), function at exception vector 22 too large)

.vector_23      0x9d0004e0        0x0
 *(.vector_23)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_23) <= (_vector_spacing << 0x5))), function at exception vector 23 too large)

.vector_24      0x9d000500        0x0
 *(.vector_24)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_24) <= (_vector_spacing << 0x5))), function at exception vector 24 too large)

.vector_25      0x9d000520        0x0
 *(.vector_25)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_25) <= (_vector_spacing << 0x5))), function at exception vector 25 too large)

.vector_26      0x9d000540        0x0
 *(.vector_26)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_26) <= (_vector_spacing << 0x5))), function at exception vector 26 too large)

.vector_27      0x9d000560        0x0
 *(.vector_27)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_27) <= (_vector_spacing << 0x5))), function at exception vector 27 too large)

.vector_28      0x9d000580        0x0
 *(.vector_28)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_28) <= (_vector_spacing << 0x5))), function at exception vector 28 too large)

.vector_29      0x9d0005a0        0x0
 *(.vector_29)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_29) <= (_vector_spacing << 0x5))), function at exception vector 29 too large)

.vector_30      0x9d0005c0        0x0
 *(.vector_30)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_30) <= (_vector_spacing << 0x5))), function at exception vector 30 too large)

.vector_31      0x9d0005e0        0x0
 *(.vector_31)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_31) <= (_vector_spacing << 0x5))), function at exception vector 31 too large)

.vector_32      0x9d000600        0x0
 *(.vector_32)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_32) <= (_vector_spacing << 0x5))), function at exception vector 32 too large)

.vector_33      0x9d000620        0x0
 *(.vector_33)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_33) <= (_vector_spacing << 0x5))), function at exception vector 33 too large)

.vector_34      0x9d000640        0x0
 *(.vector_34)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_34) <= (_vector_spacing << 0x5))), function at exception vector 34 too large)

.vector_35      0x9d000660        0x0
 *(.vector_35)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_35) <= (_vector_spacing << 0x5))), function at exception vector 35 too large)

.vector_36      0x9d000680        0x0
 *(.vector_36)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_36) <= (_vector_spacing << 0x5))), function at exception vector 36 too large)

.vector_37      0x9d0006a0        0x0
 *(.vector_37)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_37) <= (_vector_spacing << 0x5))), function at exception vector 37 too large)

.vector_38      0x9d0006c0        0x0
 *(.vector_38)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_38) <= (_vector_spacing << 0x5))), function at exception vector 38 too large)

.vector_39      0x9d0006e0        0x0
 *(.vector_39)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_39) <= (_vector_spacing << 0x5))), function at exception vector 39 too large)

.vector_40      0x9d000700        0x0
 *(.vector_40)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_40) <= (_vector_spacing << 0x5))), function at exception vector 40 too large)

.vector_41      0x9d000720        0x0
 *(.vector_41)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_41) <= (_vector_spacing << 0x5))), function at exception vector 41 too large)

.vector_42      0x9d000740        0x0
 *(.vector_42)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_42) <= (_vector_spacing << 0x5))), function at exception vector 42 too large)

.vector_43      0x9d000760        0x0
 *(.vector_43)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_43) <= (_vector_spacing << 0x5))), function at exception vector 43 too large)

.vector_44      0x9d000780        0x0
 *(.vector_44)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_44) <= (_vector_spacing << 0x5))), function at exception vector 44 too large)

.vector_45      0x9d0007a0        0x0
 *(.vector_45)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_45) <= (_vector_spacing << 0x5))), function at exception vector 45 too large)

.vector_46      0x9d0007c0        0x0
 *(.vector_46)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_46) <= (_vector_spacing << 0x5))), function at exception vector 46 too large)

.vector_47      0x9d0007e0        0x0
 *(.vector_47)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_47) <= (_vector_spacing << 0x5))), function at exception vector 47 too large)

.vector_48      0x9d000800        0x0
 *(.vector_48)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_48) <= (_vector_spacing << 0x5))), function at exception vector 48 too large)

.vector_49      0x9d000820        0x0
 *(.vector_49)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_49) <= (_vector_spacing << 0x5))), function at exception vector 49 too large)

.vector_50      0x9d000840        0x0
 *(.vector_50)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_50) <= (_vector_spacing << 0x5))), function at exception vector 50 too large)

.vector_51      0x9d000860        0x0
 *(.vector_51)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_51) <= (_vector_spacing << 0x5))), function at exception vector 51 too large)

.vector_52      0x9d000880        0x0
 *(.vector_52)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_52) <= (_vector_spacing << 0x5))), function at exception vector 52 too large)

.vector_53      0x9d0008a0        0x0
 *(.vector_53)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_53) <= (_vector_spacing << 0x5))), function at exception vector 53 too large)

.vector_54      0x9d0008c0        0x0
 *(.vector_54)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_54) <= (_vector_spacing << 0x5))), function at exception vector 54 too large)

.vector_55      0x9d0008e0        0x0
 *(.vector_55)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_55) <= (_vector_spacing << 0x5))), function at exception vector 55 too large)

.vector_56      0x9d000900        0x0
 *(.vector_56)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_56) <= (_vector_spacing << 0x5))), function at exception vector 56 too large)

.vector_57      0x9d000920        0x0
 *(.vector_57)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_57) <= (_vector_spacing << 0x5))), function at exception vector 57 too large)

.vector_58      0x9d000940        0x0
 *(.vector_58)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_58) <= (_vector_spacing << 0x5))), function at exception vector 58 too large)

.vector_59      0x9d000960        0x0
 *(.vector_59)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_59) <= (_vector_spacing << 0x5))), function at exception vector 59 too large)

.vector_60      0x9d000980        0x0
 *(.vector_60)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_60) <= (_vector_spacing << 0x5))), function at exception vector 60 too large)

.vector_61      0x9d0009a0        0x0
 *(.vector_61)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_61) <= (_vector_spacing << 0x5))), function at exception vector 61 too large)

.vector_62      0x9d0009c0        0x0
 *(.vector_62)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_62) <= (_vector_spacing << 0x5))), function at exception vector 62 too large)

.vector_63      0x9d0009e0        0x0
 *(.vector_63)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_63) <= (_vector_spacing << 0x5))), function at exception vector 63 too large)

.text           0x9d001000     0x21cc
                0x9d001000                _text_begin = .
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x9d001000       0x10 build/32MX270/production/_ext/1360930308/crt0.o
 .text          0x9d001010      0x798 build/32MX270/production/_ext/1472/main.o
                0x9d001070                main
                0x9d001774                USBEventHandler
 .text          0x9d0017a8      0x2ac build/32MX270/production/_ext/1472/serial.o
                0x9d0017a8                SerialInit
                0x9d0018f0                SerialPrintChar
                0x9d001928                SerialPrint
                0x9d001964                SerialPrintNumber
 .text          0x9d001a54       0xb0 build/32MX270/production/_ext/1472/flash.o
                0x9d001a54                FlashOperation
 .text          0x9d001b04       0x98 build/32MX270/production/_ext/1472/delay.o
                0x9d001b04                DelayUs
 .text          0x9d001b9c       0xf0 build/32MX270/production/_ext/1472/core.o
                0x9d001b9c                MemClear
                0x9d001bc4                MemCopy
                0x9d001bf4                DisableInterrupt
                0x9d001bfc                SoftReset
                0x9d001c7c                EnableInterrupt
                0x9d001c84                ReadCoreTimer
 .text          0x9d001c8c     0x1540 build/32MX270/production/_ext/1472/usb.o
                0x9d00207c                USBDeviceInit
                0x9d002248                USBDeviceTasks
                0x9d00305c                USBEnableEndpoint
                0x9d0030cc                USBTransferOnePacket
 .text          0x9d0031cc        0x0 /opt/microchip/xc32/v1.33/bin/bin/../../lib/gcc/pic32mx/4.5.2/../../../../pic32mx/lib/./proc/32MX270F256B/processor.o
 *(.text.*personality*)
 *(.gnu.warning)
 *(.mips16.fn.*)
 *(.mips16.call.*)
                0x9d0031cc                _text_end = .

.rodata         0x9d0031cc      0x170
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x9d0031cc       0xd0 build/32MX270/production/_ext/1472/main.o
 .rodata        0x9d00329c       0xa0 build/32MX270/production/_ext/1472/usb.o
                0x9d00329c                device_dsc
                0x9d0032b0                configDescriptor1
                0x9d0032dc                sd000
                0x9d0032e0                sd001
                0x9d0032f8                sd002
                0x9d00330c                hid_rpt01
                0x9d00332c                USB_CD_Ptr
                0x9d003330                USB_SD_Ptr
 *(.rodata1)
                0x9d00333c                . = ALIGN (0x4)

.sdata2         0x9d00333c        0x0
 *(.sdata2 .sdata2.* .gnu.linkonce.s2.*)
                0x9d00333c                . = ALIGN (0x4)

.sbss2          0x9d00333c        0x0
 *(.sbss2 .sbss2.* .gnu.linkonce.sb2.*)
                0x9d00333c                . = ALIGN (0x4)

.eh_frame_hdr
 *(.eh_frame_hdr)

.eh_frame
 *(.eh_frame)

.dbg_data       0xa0000000        0x0
                0xa0000000                . = (. + DEFINED (_DEBUGGER)?0x200:0x0)

.data           0xa0000000        0x0 load address 0x9d00333c
                0xa0000000                _data_begin = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0xa0000000        0x0 build/32MX270/production/_ext/1360930308/crt0.o
 .data          0xa0000000        0x0 build/32MX270/production/_ext/1472/main.o
 .data          0xa0000000        0x0 build/32MX270/production/_ext/1472/serial.o
 .data          0xa0000000        0x0 build/32MX270/production/_ext/1472/flash.o
 .data          0xa0000000        0x0 build/32MX270/production/_ext/1472/delay.o
 .data          0xa0000000        0x0 build/32MX270/production/_ext/1472/core.o
 .data          0xa0000000        0x0 build/32MX270/production/_ext/1472/usb.o
 .data          0xa0000000        0x0 /opt/microchip/xc32/v1.33/bin/bin/../../lib/gcc/pic32mx/4.5.2/../../../../pic32mx/lib/./proc/32MX270F256B/processor.o
 *(.gnu.linkonce.d.*personality*)
 *(.data1)
                0x9d00333c                _data_image_begin = LOADADDR (.data)

.eh_frame
 *(.eh_frame)
                0xa0007ff0                _gp = (ALIGN (0x10) + 0x7ff0)

.got
 *(.got.plt)
 *(.got)

.sdata          0xa0000000        0x0 load address 0x9d00333c
                0xa0000000                _sdata_begin = .
 *(.sdata .sdata.* .gnu.linkonce.s.*)
                0xa0000000                _sdata_end = .

.lit8
 *(.lit8)

.lit4
 *(.lit4)
                0xa0000000                . = ALIGN (0x4)
                0xa0000000                _data_end = .
                0xa0000000                _bss_begin = .

.sbss           0xa0000000      0x505 load address 0x9d003400
                0xa0000000                _sbss_begin = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 .sbss          0xa0000000       0x18 build/32MX270/production/_ext/1472/main.o
 *(.scommon)
 .scommon       0xa0000018        0x4 build/32MX270/production/_ext/1472/main.o
                0xa0000018                USBDeviceState
 *fill*         0xa000001c      0x1e4 
 .scommon       0xa0000200      0x305 build/32MX270/production/_ext/1472/usb.o
                0xa0000200                pDst
                0xa0000204                USBDeferINDataStagePackets
                0xa0000400                BDT
                0xa0000440                CtrlTrfData
                0xa0000480                USBDeferOUTDataStagePackets
                0xa0000484                controlTransferState
                0xa0000485                endpoint_number
                0xa0000488                pBDTEntryIn
                0xa0000490                ep_data_out
                0xa0000498                USBStatusStageEnabledFlag1
                0xa000049c                outPipe
                0xa00004a8                USBStatusStageEnabledFlag2
                0xa00004ac                pBDTEntryOut
                0xa00004b4                BothEP0OutUOWNsSet
                0xa00004b8                pBDTEntryEP0OutNext
                0xa00004bc                USBBusIsSuspended
                0xa00004c0                USBStatusStageTimeoutCounter
                0xa00004c4                SetupPkt
                0xa00004cc                ep_data_in
                0xa00004d4                active_protocol
                0xa00004d5                shortPacketStatus
                0xa00004d8                pBDTEntryEP0OutCurrent
                0xa00004dc                USBActiveConfiguration
                0xa00004e0                RemoteWakeup
                0xa00004e8                inPipe
                0xa00004f8                USTATcopy
                0xa00004fc                USBAlternateInterface
                0xa0000500                USBDeferStatusStagePacket
                0xa0000504                idle_rate
                0xa0000505                _sbss_end = .

.bss            0xa0000508       0xf8 load address 0x9d00333c
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0xa0000508        0x0 build/32MX270/production/_ext/1360930308/crt0.o
 .bss           0xa0000508       0xf8 build/32MX270/production/_ext/1472/main.o
 .bss           0xa0000600        0x0 build/32MX270/production/_ext/1472/serial.o
 .bss           0xa0000600        0x0 build/32MX270/production/_ext/1472/flash.o
 .bss           0xa0000600        0x0 build/32MX270/production/_ext/1472/delay.o
 .bss           0xa0000600        0x0 build/32MX270/production/_ext/1472/core.o
 .bss           0xa0000600        0x0 build/32MX270/production/_ext/1472/usb.o
 .bss           0xa0000600        0x0 /opt/microchip/xc32/v1.33/bin/bin/../../lib/gcc/pic32mx/4.5.2/../../../../pic32mx/lib/./proc/32MX270F256B/processor.o
 *(COMMON)
                0xa0000600                . = ALIGN (0x4)
                0xa0000600                . = ALIGN (0x4)
                0xa0000600                _end = .
                0xa0000600                _bss_end = .

.heap           0xa0000600        0x0
                0xa0000600                _heap = .
                0xa0000600                . = (. + _min_heap_size)

.stack          0xa0000600      0x408
                0xa0000600                _splim = .
                0xa0000600                _SPLIM = .
                0xa0000a00                . = (. + _min_stack_size)
 *fill*         0xa0000600      0x400 
 .stack         0xa0000a00        0x8 stack

.ramfunc        0xa0001000        0x0 load address 0x9d00333c
                0xa0001000                _ramfunc_begin = .
 *(.ramfunc .ramfunc.*)
                0xa0001000                . = ALIGN (0x4)
                0xa0001000                _ramfunc_end = .
                0x9d00333c                _ramfunc_image_begin = LOADADDR (.ramfunc)
                0x00000000                _ramfunc_length = SIZEOF (.ramfunc)
                0x00001000                _bmxdkpba_address = (_ramfunc_begin - ORIGIN (kseg1_data_mem))
                0x00010000                _bmxdudba_address = 0x10000
                0x00010000                _bmxdupba_address = 0x10000
                0xa0010000                _stack = (_ramfunc_length > 0x0)?(_ramfunc_begin - 0x4):(ORIGIN (kseg1_data_mem) + 0x10000)
                0x00000001                ASSERT (((_min_stack_size + _min_heap_size) <= (_stack - _heap)), Not enough space to allocate both stack and heap.  Reduce heap and/or stack size.)

.pdr
 *(.pdr)

.reginfo        0x00000000       0x18
 *(.reginfo)
 .reginfo       0x00000000       0x18 build/32MX270/production/_ext/1360930308/crt0.o
LOAD /opt/microchip/xc32/v1.33/bin/bin/../../lib/gcc/pic32mx/4.5.2/no-float/libgcc.a
START GROUP
LOAD /opt/microchip/xc32/v1.33/bin/bin/../../lib/gcc/pic32mx/4.5.2/../../../../pic32mx/lib/no-float/libpic32.a
LOAD /opt/microchip/xc32/v1.33/bin/bin/../../lib/gcc/pic32mx/4.5.2/../../../../pic32mx/lib/no-float/libdebug.a
LOAD /opt/microchip/xc32/v1.33/bin/bin/../../lib/gcc/pic32mx/4.5.2/../../../../pic32mx/lib/no-float/libpic32.a
LOAD /opt/microchip/xc32/v1.33/bin/bin/../../lib/gcc/pic32mx/4.5.2/../../../../pic32mx/lib/no-float/libm.a
LOAD /opt/microchip/xc32/v1.33/bin/bin/../../lib/gcc/pic32mx/4.5.2/../../../../pic32mx/lib/no-float/libe.a
LOAD /opt/microchip/xc32/v1.33/bin/bin/../../lib/gcc/pic32mx/4.5.2/../../../../pic32mx/lib/no-float/libdsp.a
LOAD /opt/microchip/xc32/v1.33/bin/bin/../../lib/gcc/pic32mx/4.5.2/no-float/libgcc.a
LOAD /opt/microchip/xc32/v1.33/bin/bin/../../lib/gcc/pic32mx/4.5.2/../../../../pic32mx/lib/no-float/libc.a
LOAD /opt/microchip/xc32/v1.33/bin/bin/../../lib/gcc/pic32mx/4.5.2/../../../../pic32mx/lib/no-float/libpic32.a
END GROUP
LOAD /opt/microchip/xc32/v1.33/bin/bin/../../lib/gcc/pic32mx/4.5.2/no-float/libgcc.a
OUTPUT(dist/32MX270/production/boot32.X.production.elf elf32-tradlittlemips)
LOAD stack
LOAD data_init

.comment        0x00000000       0x3c
 .comment       0x00000000       0x3c build/32MX270/production/_ext/1472/main.o
                                 0x3d (size before relaxing)
 .comment       0x00000000       0x3d build/32MX270/production/_ext/1472/serial.o
 .comment       0x00000000       0x3d build/32MX270/production/_ext/1472/flash.o
 .comment       0x00000000       0x3d build/32MX270/production/_ext/1472/delay.o
 .comment       0x00000000       0x3d build/32MX270/production/_ext/1472/core.o
 .comment       0x00000000       0x3d build/32MX270/production/_ext/1472/usb.o

.mdebug.abi32%z1
                0x00000000        0x0
 .mdebug.abi32  0x00000000        0x0 build/32MX270/production/_ext/1472/usb.o

.mdebug.abi32%z2
                0x00000000        0x0
 .mdebug.abi32  0x00000000        0x0 build/32MX270/production/_ext/1472/core.o

.mdebug.abi32%z3
                0x00000000        0x0
 .mdebug.abi32  0x00000000        0x0 build/32MX270/production/_ext/1472/delay.o

.mdebug.abi32%z4
                0x00000000        0x0
 .mdebug.abi32  0x00000000        0x0 build/32MX270/production/_ext/1472/flash.o

.mdebug.abi32%z5
                0x00000000        0x0
 .mdebug.abi32  0x00000000        0x0 build/32MX270/production/_ext/1472/serial.o

.mdebug.abi32%z6
                0x00000000        0x0
 .mdebug.abi32  0x00000000        0x0 build/32MX270/production/_ext/1472/main.o

.dinit          0x9d003434       0x20
 .dinit         0x9d003434       0x20 data_init
